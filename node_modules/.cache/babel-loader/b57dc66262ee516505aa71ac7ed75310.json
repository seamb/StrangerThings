{"ast":null,"code":"var _jsxFileName = \"/Users/seanbalog/Desktop/FULLSTACK/course_work/StrangerThings/src/components/AddPosts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport callApi from '../util';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AddPosts = _ref => {\n  _s();\n\n  let {\n    token,\n    setPosts\n  } = _ref;\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [willDeliver, setWillDeliver] = useState(\"\");\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setTitle(\"\");\n    setDescription(\"\");\n    setPrice(\"\");\n    setLocation(\"\");\n    setWillDeliver(\"\");\n    const postResp = await callApi({\n      url: `/posts`,\n      method: \"POST\",\n      token,\n      body: {\n        post: {\n          title,\n          description,\n          price,\n          willDeliver\n        }\n      }\n    });\n    console.log(\"Post reponses\", postResp);\n    const allPosts = await callApi({\n      url: '/posts'\n    });\n    console.log(\"ALL NEW POSTS\", allPosts.data.posts);\n    setPosts(allPosts.data.posts);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Add a new Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), token ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Title\",\n        value: title,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Description\",\n        value: description,\n        onChange: e => setDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Price\",\n        value: price,\n        onChange: e => setPrice(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Location\",\n        value: location,\n        onChange: e => setLocation(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Available for delivery?\",\n        value: willDeliver,\n        onChange: e => setWillDeliver(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"Submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 10\n    }, this) : /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/users/login\",\n      children: \"Log in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 10\n    }, this) || /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/users/login\",\n      children: \"Log in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AddPosts, \"UQB79AxJ1RFtDKvd0ua/F6aH5H0=\");\n\n_c = AddPosts;\nexport default AddPosts;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddPosts\");","map":{"version":3,"sources":["/Users/seanbalog/Desktop/FULLSTACK/course_work/StrangerThings/src/components/AddPosts.js"],"names":["React","useState","callApi","Link","AddPosts","token","setPosts","title","setTitle","description","setDescription","price","setPrice","location","setLocation","willDeliver","setWillDeliver","handleSubmit","event","preventDefault","postResp","url","method","body","post","console","log","allPosts","data","posts","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport callApi from '../util';\nimport { Link } from 'react-router-dom';\n\n\n\nconst AddPosts = ({token, setPosts}) => {\n    const [title, setTitle] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [price, setPrice] = useState(\"\");\n    const [location, setLocation] = useState(\"\");\n    const [willDeliver, setWillDeliver] = useState(\"\")\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        setTitle(\"\");\n        setDescription(\"\");\n        setPrice(\"\");\n        setLocation(\"\");\n        setWillDeliver(\"\")\n\n        const postResp = await callApi ({\n        url: `/posts`,\n        method: \"POST\",\n        token,\n        body: {\n            post:{\n           \n                title,\n                description,\n                price,\n                willDeliver              \n            }}\n           \n        })\n        console.log(\"Post reponses\", postResp)\n\n        const allPosts = await callApi({\n        url: '/posts'\n        })\n        console.log(\"ALL NEW POSTS\",allPosts.data.posts);\n        setPosts(allPosts.data.posts)\n\n    }\n    return(\n    <>\n        <h1>\n            Add a new Post\n        </h1>\n        {token  \n        ?<form onSubmit={handleSubmit}>\n            <input type='text'\n            placeholder='Title'\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n            ></input> <br/>\n            <input type='text'\n            placeholder='Description'\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n            ></input> <br/>\n            <input type='text'\n            placeholder='Price'\n            value={price}\n            onChange={(e) => setPrice(e.target.value)}\n            ></input> <br/>\n            <input type='text'\n            placeholder='Location'\n            value={location}\n            onChange={(e) => setLocation(e.target.value)}\n            ></input> <br/>\n            <input type='text'\n            placeholder='Available for delivery?'\n            value={willDeliver}\n            onChange={(e) => setWillDeliver(e.target.value)}\n            ></input> <br/>\n            <button type='Submit'>Submit</button>\n        </form>\n        :<Link to=\"/users/login\">Log in</Link>||\n        <Link to=\"/users/login\">Log in</Link>   }\n    </>    \n    )\n    }\n\nexport default AddPosts;"]},"metadata":{},"sourceType":"module"}