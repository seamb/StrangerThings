{"ast":null,"code":"var _jsxFileName = \"/Users/seanbalog/Desktop/FULLSTACK/course_work/StrangerThings/src/components/Users.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport callApi from '../util';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Users(_ref) {\n  _s();\n\n  let {\n    setToken,\n    setUser,\n    user\n  } = _ref;\n  const params = useParams();\n  const history = useHistory();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  console.log('params', params);\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const userResp = await callApi({\n      url: `/users/${params.method}`,\n      method: \"POST\",\n      body: {\n        user: {\n          username,\n          password\n        }\n      }\n    });\n    console.log(userResp.data);\n    console.log(userResp.username, \"users name\"); // if(userResp.data){\n    // console.log('TOKEN', userResp.data.token)\n    // console.log(username, password, username)\n\n    if (userResp.data) {\n      console.log('token in account', userResp.data.token); // call /users/me\n\n      const userData = await callApi({\n        url: '/users/me',\n        token: userResp.data.token\n      });\n      console.log('User Data', userData);\n      setToken(userResp.data.token);\n      console.log(\"my name is\", userData.data.username);\n      setUser({\n        username: userData.data.username\n      });\n\n      if (userResp.data.token || \"\") {\n        history.push(\"/\");\n      }\n    }\n  };\n\n  console.log(username);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Please \", params.method, \" to continue.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"username\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"Submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Users, \"wITn1DeePK8qplcPnejQk7YQxCk=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = Users;\nexport default Users;\n\nvar _c;\n\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"sources":["/Users/seanbalog/Desktop/FULLSTACK/course_work/StrangerThings/src/components/Users.js"],"names":["React","useState","useParams","useHistory","callApi","Users","setToken","setUser","user","params","history","username","setUsername","password","setPassword","console","log","handleSubmit","event","preventDefault","userResp","url","method","body","data","token","userData","push","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport callApi from '../util';\n\nfunction Users ({setToken, setUser, user}) {\n    const params = useParams();\n    const history = useHistory();\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('')\n\n    console.log('params', params)\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        \n    const userResp = await callApi ({\n        url: `/users/${params.method}`,\n        method: \"POST\",\n        body: {\n            user: {\n                username,\n                password\n            }\n        }\n    })  \n        console.log(userResp.data)\n        console.log(userResp.username, \"users name\")\n        // if(userResp.data){\n        // console.log('TOKEN', userResp.data.token)\n        // console.log(username, password, username)\n       \n    if (userResp.data) {\n      console.log('token in account', userResp.data.token);\n      // call /users/me\n      const userData = await callApi({ \n        url: '/users/me', \n        token: userResp.data.token,\n      })\n       console.log('User Data', userData);\n       \n        setToken(userResp.data.token);\n        console.log(\"my name is\", userData.data.username);\n        setUser({username: userData.data.username})\n        if(userResp.data.token || \"\"){\n        history.push(\"/\");\n\n        }}\n    } \nconsole.log(username)\n\n    return( <>\n        <h1>\n            Please {params.method} to continue.\n        </h1>\n        <form onSubmit={handleSubmit}>\n            <input type='text'\n            placeholder='username'\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n            ></input> <br/>\n            <input type='password'\n            placeholder='password'\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            ></input><br/>\n            <button type='Submit'>Submit</button>\n        </form>\n    </>\n    )\n    }\n\nexport default Users;"]},"metadata":{},"sourceType":"module"}