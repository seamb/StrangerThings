{"ast":null,"code":"var _jsxFileName = \"/Users/seanbalog/Desktop/FULLSTACK/course_work/StrangerThings/src/components/Posts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport callApi from '../util';\nimport IndPost from './IndPost.js';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Posts = _ref => {\n  _s();\n\n  let {\n    posts,\n    setPosts,\n    token,\n    user,\n    fetchPosts\n  } = _ref;\n  // console.log(posts, \"POSTS IN POSTS\");\n  const [postOb] = posts; // console.log(postOb, \"Just POSTS\"); \n\n  const {\n    search\n  } = useLocation();\n  const history = useHistory();\n  console.log('Search location POSTS', search);\n  const searchParams = new URLSearchParams(search);\n  const searchTerm = searchParams.get('searchTerm') || '';\n  console.log(\"SEARCH TERM\", searchTerm); // console.log(object);\n\n  const handleSearch = event => {\n    event.preventDefault();\n  };\n\n  const handleDelete = async POST_ID => {\n    const resp = await callApi({\n      url: `/posts/${POST_ID}`,\n      method: 'DELETE',\n      token\n    });\n    console.log(resp, \"RESP in POSTS\");\n    const postList = await callApi({\n      url: `/posts`,\n      token\n    });\n    const postsLeft = postList.data.posts;\n    if (postsLeft) setPosts(postsLeft);\n  };\n\n  useEffect(() => {\n    fetchPosts();\n  }, []); //if search term is True it will pass through Filetered\n\n  const searchResults = (post, searchTerm) => {\n    const {\n      title,\n      description,\n      price,\n      location,\n      author: {\n        username\n      }\n    } = post; // console.log( 'post fields', title, description, price, location, username );\n\n    const toCheck = [title, description, price, location, username];\n\n    for (const field of toCheck) {\n      if (field.toLowerCase().includes(searchTerm.toLowerCase())) return true;\n    }\n  };\n\n  const filteredPosts = posts.filter(post => searchResults(post, searchTerm));\n  console.log(\"FILTERED POSTS\", filteredPosts);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"looking for\",\n      onChange: e => {\n        history.push(e.target.value ? `/posts?searchTerm=${e.target.value}` : '/posts');\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: event => handleSearch(event => \"\"),\n      children: \"search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), filteredPosts.map(post => /*#__PURE__*/_jsxDEV(IndPost, {\n      post: post,\n      token: token,\n      user: user,\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: `/posts/${post._id}`,\n        children: \"See details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), token && post.isAuthor ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleDelete(post._id),\n        children: \"DELETE POST\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this) : null]\n    }, post._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 35\n    }, this))]\n  }, void 0, true);\n};\n\n_s(Posts, \"YIpb2gKQkwm3xS70pE29EyLfhOo=\", false, function () {\n  return [useLocation, useHistory];\n});\n\n_c = Posts;\nexport default Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["/Users/seanbalog/Desktop/FULLSTACK/course_work/StrangerThings/src/components/Posts.js"],"names":["React","useEffect","useState","Link","callApi","IndPost","useLocation","useHistory","Posts","posts","setPosts","token","user","fetchPosts","postOb","search","history","console","log","searchParams","URLSearchParams","searchTerm","get","handleSearch","event","preventDefault","handleDelete","POST_ID","resp","url","method","postList","postsLeft","data","searchResults","post","title","description","price","location","author","username","toCheck","field","toLowerCase","includes","filteredPosts","filter","e","push","target","value","map","_id","isAuthor"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport callApi from '../util';\nimport IndPost from './IndPost.js'\nimport { useLocation, useHistory } from 'react-router-dom';\n\n\n\nconst Posts = ({ posts, setPosts, token, user, fetchPosts }) => {\n\n  // console.log(posts, \"POSTS IN POSTS\");\n  const [postOb] = posts\n  // console.log(postOb, \"Just POSTS\"); \n  const { search } = useLocation();\n  const history = useHistory();\n  console.log('Search location POSTS', search);\n  const searchParams = new URLSearchParams(search);\n  const searchTerm = searchParams.get('searchTerm') || '';\n\n  console.log(\"SEARCH TERM\", searchTerm);\n\n  // console.log(object);\n     const handleSearch =  (event) => {\n      event.preventDefault();\n     }\n\n\n    const handleDelete = async (POST_ID) =>{\n      const resp = await callApi({ \n        url: `/posts/${POST_ID}`,\n        method: 'DELETE',\n        token,\n      })\n        console.log(resp,\"RESP in POSTS\");\n      const postList = await callApi ({\n        url: `/posts`,\n        token,\n      })\n\n      const postsLeft = postList.data.posts;\n      if(postsLeft)\n      setPosts(postsLeft)\n    }\n\n    \n    useEffect(() => {\n      fetchPosts()\n    }, []);\n    //if search term is True it will pass through Filetered\n  \n  \n\n  const searchResults = (post, searchTerm) => {\n    const { title, description, price, location, author: {username} } = post;\n    // console.log( 'post fields', title, description, price, location, username );\n    const toCheck = [title, description, price, location, username ];\n    \n    for (const field of toCheck) {\n      if (field.toLowerCase().includes(searchTerm.toLowerCase()))\n        return true;\n    }\n   \n  } \n\n\n    const filteredPosts = posts.filter(post => searchResults(post, searchTerm));\n    console.log(\"FILTERED POSTS\",filteredPosts);\n    \n\n    return <>\n      <h4>Search</h4>\n        <input \n        type=\"text\"\n        placeholder=\"looking for\"\n        onChange={(e) => { history.push(e.target.value?`/posts?searchTerm=${e.target.value}`: '/posts')}}\n        /><button onClick={(event) => handleSearch((event) => \"\")}>search</button>\n        <br/>\n      {\n        filteredPosts.map(post => <IndPost key={post._id} post={post} token={token} user={user}>\n          <Link to={`/posts/${post._id}`}>See details</Link>\n          {token \n          && post.isAuthor\n          ? <button onClick={() => handleDelete(post._id)}>DELETE POST</button>\n          : null}\n          </IndPost>)   \n      } \n    </>\n  \n}\n\nexport default Posts;\n      \n\n\n"]},"metadata":{},"sourceType":"module"}