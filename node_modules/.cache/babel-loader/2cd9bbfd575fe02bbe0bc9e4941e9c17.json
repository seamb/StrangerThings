{"ast":null,"code":"var _jsxFileName = \"/Users/seanbalog/Desktop/FULLSTACK/course_work/StrangerThings/src/components/Users.js\",\n    _s = $RefreshSig$();\n\n// import React, { useState } from 'react';\n// import { useParams, useHistory, } from 'react-router-dom';\n// import callApi from '../util';\n// const Users = ({setToken, setUser}) => {\n//     const params = useParams();\n//     const history = useHistory();\n//     const [username, setUsername] = useState('');\n//     const [password, setPassword] = useState('')\n//     const handleSubmit = async (event) => {        \n//         event.preventDefault();\n//         const userData = await callApi ({\n//         url: `/users/${params.method}`,\n//         method: \"POST\",\n//         headers: { \n//             'Content-Type': 'application/json',\n//         },\n//         body: {\n//             user:{\n//                 username,\n//                 password             \n//             }}\n//         })\n//         console.log(\"user reponses\", userData)\n//         console.log(\"USER DATA\",userData)\n//         if (userData) {\n//         console.log('token in account', userData.data);\n//         const userInfo = await callApi({ \n//         url: '/users/me', \n//         token: userData.data.token,\n//         })\n//         console.log('userInfo', userInfo);\n//         console.log(userInfo.data.username, \"is my name\")\n//         setToken(userData.data.token);\n//         setUser({username: userInfo.data.username})\n//         if (userData.data.token){\n//         history.push(\"/\");\n//         }\n//       }\n//     }\n//         console.log('params', params)\n//     return( <>\n//         <h1>\n//             Please {params.method} to continue.\n//         </h1>\n//         <form onSubmit={handleSubmit}>\n//             <input type='text'\n//             placeholder='username'\n//             value={username}\n//             onChange={(e) => setUsername(e.target.value)}\n//             ></input> <br/>\n//             <input type='password'\n//             placeholder='password'\n//             value={password}\n//             onChange={(e) => setPassword(e.target.value)}\n//             ></input><br/>\n//             <button type='Submit'>Submit</button>\n//         </form>\n//     </>\n//     )}\n// export default Users;\nimport React, { useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport callApi from '../util'; // const apiURL =\"https://strangers-things.herokuapp.com/api/2111-CSU-RM-WEB-PT\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Users(_ref) {\n  _s();\n\n  let {\n    setToken,\n    setUser,\n    token\n  } = _ref;\n  const params = useParams();\n  const history = useHistory();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  console.log('params', params);\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const userResp = await callApi({\n      url: `/users/${params.method}`,\n      method: \"POST\",\n      token,\n      body: {\n        user: {\n          username,\n          password\n        }\n      }\n    });\n    console.log(\"user Resp\", userResp); // const resp = await fetch(`${apiURL}/users/${params.method}`, {\n    //     method: \"POST\",\n    //     headers: {\n    //         'Content-Type': 'application/json'\n    //     },\n    //     body: JSON.stringify({\n    //         user: {\n    //             username,\n    //             password\n    //         }\n    //     })\n    // })\n    // const result = await resp.json();\n    // console.log('TOKEN', result.data.token)\n    // console.log('resutlts--', result)\n\n    console.log(username, password); // setToken(result.data.token);\n    // setUser()\n    // history.push(\"/\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Please \", params.method, \" to continue.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"username\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"Submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Users, \"wITn1DeePK8qplcPnejQk7YQxCk=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = Users;\nexport default Users;\n\nvar _c;\n\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"sources":["/Users/seanbalog/Desktop/FULLSTACK/course_work/StrangerThings/src/components/Users.js"],"names":["React","useState","useParams","useHistory","callApi","Users","setToken","setUser","token","params","history","username","setUsername","password","setPassword","console","log","handleSubmit","event","preventDefault","userResp","url","method","body","user","e","target","value"],"mappings":";;;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,kBAAtC;AACA,OAAOC,OAAP,MAAoB,SAApB,C,CAEA;;;;;AAEA,SAASC,KAAT,OAA4C;AAAA;;AAAA,MAA5B;AAACC,IAAAA,QAAD;AAAWC,IAAAA,OAAX;AAAoBC,IAAAA;AAApB,GAA4B;AACxC,QAAMC,MAAM,GAAGP,SAAS,EAAxB;AACA,QAAMQ,OAAO,GAAGP,UAAU,EAA1B;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,EAAD,CAAxC;AAGAc,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBP,MAAtB;;AACA,QAAMQ,YAAY,GAAG,MAAOC,KAAP,IAAiB;AAClCA,IAAAA,KAAK,CAACC,cAAN;AAEJ,UAAMC,QAAQ,GAAG,MAAMhB,OAAO,CAAE;AAC5BiB,MAAAA,GAAG,EAAG,UAASZ,MAAM,CAACa,MAAO,EADD;AAE5BA,MAAAA,MAAM,EAAE,MAFoB;AAG5Bd,MAAAA,KAH4B;AAI5Be,MAAAA,IAAI,EAAE;AACFC,QAAAA,IAAI,EAAE;AACFb,UAAAA,QADE;AAEFE,UAAAA;AAFE;AADJ;AAJsB,KAAF,CAA9B;AAWHE,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBI,QAAzB,EAdyC,CAelC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ,EAAsBE,QAAtB,EA9BkC,CA+BlC;AACA;AACA;AAEH,GAnCD;;AAsCA,sBAAQ;AAAA,4BACJ;AAAA,4BACYJ,MAAM,CAACa,MADnB;AAAA;AAAA;AAAA;AAAA;AAAA,YADI,eAIJ;AAAM,MAAA,QAAQ,EAAEL,YAAhB;AAAA,8BACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AACA,QAAA,WAAW,EAAC,UADZ;AAEA,QAAA,KAAK,EAAEN,QAFP;AAGA,QAAA,QAAQ,EAAGc,CAAD,IAAOb,WAAW,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV;AAH5B;AAAA;AAAA;AAAA;AAAA,cADJ,oBAKc;AAAA;AAAA;AAAA;AAAA,cALd,eAMI;AAAO,QAAA,IAAI,EAAC,UAAZ;AACA,QAAA,WAAW,EAAC,UADZ;AAEA,QAAA,KAAK,EAAEd,QAFP;AAGA,QAAA,QAAQ,EAAGY,CAAD,IAAOX,WAAW,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV;AAH5B;AAAA;AAAA;AAAA;AAAA,cANJ,eAUa;AAAA;AAAA;AAAA;AAAA,cAVb,eAWI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJI;AAAA,kBAAR;AAmBC;;GAjEItB,K;UACUH,S,EACCC,U;;;KAFXE,K;AAmET,eAAeA,KAAf","sourcesContent":["// import React, { useState } from 'react';\n// import { useParams, useHistory, } from 'react-router-dom';\n// import callApi from '../util';\n\n// const Users = ({setToken, setUser}) => {\n//     const params = useParams();\n//     const history = useHistory();\n//     const [username, setUsername] = useState('');\n//     const [password, setPassword] = useState('')\n\n//     const handleSubmit = async (event) => {        \n//         event.preventDefault();\n\n//         const userData = await callApi ({\n//         url: `/users/${params.method}`,\n//         method: \"POST\",\n//         headers: { \n//             'Content-Type': 'application/json',\n//         },\n//         body: {\n//             user:{\n//                 username,\n//                 password             \n//             }}\n           \n//         })\n//         console.log(\"user reponses\", userData)\n\n//         console.log(\"USER DATA\",userData)\n\n//         if (userData) {\n//         console.log('token in account', userData.data);\n//         const userInfo = await callApi({ \n//         url: '/users/me', \n//         token: userData.data.token,\n//         })\n//         console.log('userInfo', userInfo);\n//         console.log(userInfo.data.username, \"is my name\")\n\n//         setToken(userData.data.token);\n//         setUser({username: userInfo.data.username})\n//         if (userData.data.token){\n//         history.push(\"/\");\n//         }\n//       }\n    \n//     }\n\n//         console.log('params', params)\n\n//     return( <>\n//         <h1>\n//             Please {params.method} to continue.\n//         </h1>\n//         <form onSubmit={handleSubmit}>\n//             <input type='text'\n//             placeholder='username'\n//             value={username}\n//             onChange={(e) => setUsername(e.target.value)}\n//             ></input> <br/>\n//             <input type='password'\n//             placeholder='password'\n//             value={password}\n//             onChange={(e) => setPassword(e.target.value)}\n//             ></input><br/>\n//             <button type='Submit'>Submit</button>\n//         </form>\n//     </>\n//     )}\n\n// export default Users;\n\nimport React, { useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport callApi from '../util';\n\n// const apiURL =\"https://strangers-things.herokuapp.com/api/2111-CSU-RM-WEB-PT\";\n\nfunction Users ({setToken, setUser, token}) {\n    const params = useParams();\n    const history = useHistory();\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('')\n\n\n    console.log('params', params)\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        \n    const userResp = await callApi ({\n        url: `/users/${params.method}`,\n        method: \"POST\",\n        token,\n        body: {\n            user: {\n                username,\n                password\n            }\n        }\n    })    \n console.log(\"user Resp\", userResp)\n        // const resp = await fetch(`${apiURL}/users/${params.method}`, {\n        //     method: \"POST\",\n        //     headers: {\n        //         'Content-Type': 'application/json'\n        //     },\n        //     body: JSON.stringify({\n        //         user: {\n        //             username,\n        //             password\n        //         }\n        //     })\n        // })\n        // const result = await resp.json();\n        // console.log('TOKEN', result.data.token)\n        // console.log('resutlts--', result)\n        console.log(username, password)\n        // setToken(result.data.token);\n        // setUser()\n        // history.push(\"/\");\n\n    } \n   \n\n    return( <>\n        <h1>\n            Please {params.method} to continue.\n        </h1>\n        <form onSubmit={handleSubmit}>\n            <input type='text'\n            placeholder='username'\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n            ></input> <br/>\n            <input type='password'\n            placeholder='password'\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            ></input><br/>\n            <button type='Submit'>Submit</button>\n        </form>\n    </>\n    )\n    }\n\nexport default Users;"]},"metadata":{},"sourceType":"module"}