{"ast":null,"code":"var _jsxFileName = \"/Users/seanbalog/Desktop/FULLSTACK/course_work/StrangerThings/src/components/Posts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport callApi from '../util';\nimport IndPost from './IndPost.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Posts = _ref => {\n  _s();\n\n  let {\n    posts,\n    setPosts,\n    token,\n    user,\n    fetchPosts\n  } = _ref;\n  console.log(posts, \"POSTS IN POSTS\");\n  const [postOb] = posts;\n  console.log(postOb, \"Just POSTS\");\n\n  const handleDelete = async POST_ID => {\n    const resp = await callApi({\n      url: `/posts/${POST_ID}`,\n      method: 'DELETE',\n      token\n    });\n    console.log(resp, \"RESP in POSTS\");\n    const postList = await callApi({\n      url: `/posts`,\n      token\n    });\n    const postsLeft = postList.data.posts;\n    if (postsLeft) setPosts(postsLeft);\n  };\n\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: posts.map(post => /*#__PURE__*/_jsxDEV(IndPost, {\n      post: post,\n      token: token,\n      user: user,\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: `/posts/${post._id}`,\n        children: \"See details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), token && post.isAuthor ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleDelete(post._id),\n        children: \"DELETE POST\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this) : null]\n    }, post._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 25\n    }, this))\n  }, void 0, false);\n};\n\n_s(Posts, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Posts;\nexport default Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["/Users/seanbalog/Desktop/FULLSTACK/course_work/StrangerThings/src/components/Posts.js"],"names":["React","useEffect","Link","callApi","IndPost","Posts","posts","setPosts","token","user","fetchPosts","console","log","postOb","handleDelete","POST_ID","resp","url","method","postList","postsLeft","data","map","post","_id","isAuthor"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,OAAOC,OAAP,MAAoB,cAApB;;;;AAMA,MAAMC,KAAK,GAAG,QAAkD;AAAA;;AAAA,MAAjD;AAAEC,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA,KAAnB;AAA0BC,IAAAA,IAA1B;AAAgCC,IAAAA;AAAhC,GAAiD;AAChEC,EAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ,EAAmB,gBAAnB;AACA,QAAM,CAACO,MAAD,IAAWP,KAAjB;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYC,MAAZ,EAAoB,YAApB;;AACE,QAAMC,YAAY,GAAG,MAAOC,OAAP,IAAkB;AACrC,UAAMC,IAAI,GAAG,MAAMb,OAAO,CAAC;AACzBc,MAAAA,GAAG,EAAG,UAASF,OAAQ,EADE;AAEzBG,MAAAA,MAAM,EAAE,QAFiB;AAGzBV,MAAAA;AAHyB,KAAD,CAA1B;AAKEG,IAAAA,OAAO,CAACC,GAAR,CAAYI,IAAZ,EAAiB,eAAjB;AACF,UAAMG,QAAQ,GAAG,MAAMhB,OAAO,CAAE;AAC9Bc,MAAAA,GAAG,EAAG,QADwB;AAE9BT,MAAAA;AAF8B,KAAF,CAA9B;AAKA,UAAMY,SAAS,GAAGD,QAAQ,CAACE,IAAT,CAAcf,KAAhC;AACA,QAAGc,SAAH,EACAb,QAAQ,CAACa,SAAD,CAAR;AACD,GAfD;;AAkBAnB,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,UAAU;AACX,GAFQ,EAEN,EAFM,CAAT;AAKA,sBAAO;AAAA,cAEHJ,KAAK,CAACgB,GAAN,CAAUC,IAAI,iBAAI,QAAC,OAAD;AAAwB,MAAA,IAAI,EAAEA,IAA9B;AAAoC,MAAA,KAAK,EAAEf,KAA3C;AAAkD,MAAA,IAAI,EAAEC,IAAxD;AAAA,8BAChB,QAAC,IAAD;AAAM,QAAA,EAAE,EAAG,UAASc,IAAI,CAACC,GAAI,EAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADgB,EAEfhB,KAAK,IACHe,IAAI,CAACE,QADP,gBAEC;AAAQ,QAAA,OAAO,EAAE,MAAMX,YAAY,CAACS,IAAI,CAACC,GAAN,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFD,GAGC,IALc;AAAA,OAAcD,IAAI,CAACC,GAAnB;AAAA;AAAA;AAAA;AAAA,YAAlB;AAFG,mBAAP;AAYD,CAvCD;;GAAMnB,K;;KAAAA,K;AAyCN,eAAeA,KAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport callApi from '../util';\nimport IndPost from './IndPost.js'\n\n\n\n\n\nconst Posts = ({ posts, setPosts, token, user, fetchPosts }) => {\nconsole.log(posts, \"POSTS IN POSTS\");\nconst [postOb] = posts\nconsole.log(postOb, \"Just POSTS\"); \n  const handleDelete = async (POST_ID) =>{\n    const resp = await callApi({ \n      url: `/posts/${POST_ID}`,\n      method: 'DELETE',\n      token,\n    })\n      console.log(resp,\"RESP in POSTS\");\n    const postList = await callApi ({\n      url: `/posts`,\n      token,\n    })\n\n    const postsLeft = postList.data.posts;\n    if(postsLeft)\n    setPosts(postsLeft)\n  }\n\n  \n  useEffect(() => {\n    fetchPosts()\n  }, []);\n\n \n  return <>\n    {\n      posts.map(post => <IndPost key={post._id} post={post} token={token} user={user}>\n        <Link to={`/posts/${post._id}`}>See details</Link>\n        {token \n        && post.isAuthor\n        ? <button onClick={() => handleDelete(post._id)}>DELETE POST</button>\n        : null}\n        </IndPost>)   \n    }\n  </>\n  \n}\n\nexport default Posts;\n      \n\n\n"]},"metadata":{},"sourceType":"module"}