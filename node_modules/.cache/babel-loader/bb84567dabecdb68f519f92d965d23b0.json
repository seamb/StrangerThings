{"ast":null,"code":"var _jsxFileName = \"/Users/seanbalog/Desktop/FULLSTACK/course_work/StrangerThings/src/components/Posts.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiURL = \"https://strangers-things.herokuapp.com/api/2111-CSU-RM-WEB-PT\";\n\nconst Posts = _ref => {\n  let {\n    posts,\n    setPosts\n  } = _ref;\n\n  // useEffect(() => {\n  try {\n    const getPosts = async () => {\n      const strangePosts = await fetch(`${apiURL}/posts`);\n      console.log(strangePosts, \"STRANGER\");\n      const results = await strangePosts.json();\n      console.log(results, \"RESULTS\");\n      const posts = results.data.posts;\n      console.log(posts, \"POSTS\");\n      console.log(results.data.posts);\n\n      if (posts) {\n        setPosts(posts);\n      }\n    };\n\n    getPosts();\n  } catch (error) {\n    console.log(error);\n  } // }, [])\n\n\n  console.log(\"THESE POSTS:\", posts);\n  return posts.map((post, index) => {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 43\n      }, this), console.log(posts), post.description, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 32\n      }, this), post.price, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), \"location: \", /*#__PURE__*/_jsxDEV(\"em\", {\n        children: post.location\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 22\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }, this);\n  });\n};\n\n_c = Posts;\nexport default Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["/Users/seanbalog/Desktop/FULLSTACK/course_work/StrangerThings/src/components/Posts.js"],"names":["React","apiURL","Posts","posts","setPosts","getPosts","strangePosts","fetch","console","log","results","json","data","error","map","post","index","title","description","price","location"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,MAAM,GAAE,+DAAd;;AAEA,MAAMC,KAAK,GAAG,QAAuB;AAAA,MAAtB;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR,GAAsB;;AAEnC;AACE,MAAG;AACD,UAAMC,QAAQ,GAAG,YAAY;AAC3B,YAAMC,YAAY,GAAG,MAAMC,KAAK,CAAG,GAAEN,MAAO,QAAZ,CAAhC;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAYH,YAAZ,EAA0B,UAA1B;AACA,YAAMI,OAAO,GAAG,MAAMJ,YAAY,CAACK,IAAb,EAAtB;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAYC,OAAZ,EAAqB,SAArB;AACA,YAAMP,KAAK,GAAGO,OAAO,CAACE,IAAR,CAAaT,KAA3B;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ,EAAmB,OAAnB;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYC,OAAO,CAACE,IAAR,CAAaT,KAAzB;;AAGH,UAAIA,KAAJ,EAAU;AACTC,QAAAA,QAAQ,CAACD,KAAD,CAAR;AAAgB;AAEf,KAbD;;AAcFE,IAAAA,QAAQ;AAIP,GAnBD,CAoBA,OAAOQ,KAAP,EAAa;AACbL,IAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACC,GAzBgC,CA2BnC;;;AAEGL,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BN,KAA5B;AACD,SAEGA,KAAK,CAACW,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC1B,wBACE;AAAA,8BACE;AAAA,kBAASD,IAAI,CAACE;AAAd;AAAA;AAAA;AAAA;AAAA,cADF,oBACgC;AAAA;AAAA;AAAA;AAAA,cADhC,EAEGT,OAAO,CAACC,GAAR,CAAYN,KAAZ,CAFH,EAGGY,IAAI,CAACG,WAHR,oBAGqB;AAAA;AAAA;AAAA;AAAA,cAHrB,EAIGH,IAAI,CAACI,KAJR,eAKE;AAAA;AAAA;AAAA;AAAA,cALF,6BAMW;AAAA,kBAAKJ,IAAI,CAACK;AAAV;AAAA;AAAA;AAAA;AAAA,cANX;AAAA,OAAQJ,KAAR;AAAA;AAAA;AAAA;AAAA,YADF;AAUD,GAXA,CAFH;AAcC,CA5CL;;KAAMd,K;AA8CN,eAAeA,KAAf","sourcesContent":["import React from 'react';\n\n\nconst apiURL =\"https://strangers-things.herokuapp.com/api/2111-CSU-RM-WEB-PT\";\n\nconst Posts = ({posts, setPosts}) => {\n\n  // useEffect(() => {\n    try{\n      const getPosts = async () => {\n        const strangePosts = await fetch (`${apiURL}/posts`);\n        console.log(strangePosts, \"STRANGER\")\n        const results = await strangePosts.json();\n        console.log(results, \"RESULTS\")\n        const posts = results.data.posts;\n        console.log(posts, \"POSTS\")\n        console.log(results.data.posts)\n         \n\n     if (posts){\n      setPosts(posts)}\n\n      }\n    getPosts();\n  \n\n\n    }\n    catch (error){\n    console.log(error)\n    }\n\n  // }, [])\n     \n     console.log(\"THESE POSTS:\", posts)\n    return(\n   \n       posts.map((post, index) => {\n        return (\n          <p key={index}>\n            <strong>{post.title}</strong> <br/>\n          {  console.log(posts)}\n            {post.description} <br/>\n            {post.price} \n            <br/>\n           location: <em>{post.location}</em>\n          </p>\n          )\n      }));\n    }\n\nexport default Posts;"]},"metadata":{},"sourceType":"module"}