{"ast":null,"code":"const {\n  REACT_APP_BASE_URL = \"https://strangers-things.herokuapp.com/api/2111-CSU-RM-WEB-PT\"\n} = process.env; // const callApi = async ({url, method, token, body}) => {\n//      console.log({url, method, token, body})\n//     try {\n//         const options = {\n//             method: method? method: 'GET',\n//             headers: {\n//                 'Content-Type': 'application/json',\n//             },\n//             body: JSON.stringify(body),\n//         }\n//         if (token) {\n//             options.headers['Authorization'] = `Bearer ${token}`;\n//         }\n//     console.log('options: ', options);\n//         const resp = await fetch(REACT_APP_BASE_URL + url, options);\n//         const result = await resp.json();\n//         if (result.error){\n//             throw(result.error)\n//         }\n//         return result;    \n//         }catch(error) {\n//         console.log(error);\n//     }\n// };\n// const { REACT_APP_API_URL = 'http://localhost:4000/api/2105-SJS-RM-WEB-PT' } = process.env;\n\nexport const callApi = async _ref => {\n  let {\n    url,\n    method,\n    token,\n    body\n  } = _ref;\n  console.log({\n    url,\n    method,\n    token,\n    body\n  });\n\n  try {\n    const options = {\n      method: method ? method : 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    };\n\n    if (token) {\n      options.headers['Authorization'] = `Bearer ${token}`;\n    }\n\n    console.log('request url: ', REACT_APP_BASE_URL + url);\n    console.log('options: ', options);\n    const response = await fetch(REACT_APP_BASE_URL + url, options);\n    const data = await response.json();\n    console.log('data: ', data);\n    if (data.error) throw data.error;\n    return data;\n  } catch (error) {\n    console.error('ERROR: ', error);\n  }\n};\nexport default callApi;","map":{"version":3,"sources":["/Users/seanbalog/Desktop/FULLSTACK/course_work/StrangerThings/src/util/index.js"],"names":["REACT_APP_BASE_URL","process","env","callApi","url","method","token","body","console","log","options","headers","JSON","stringify","response","fetch","data","json","error"],"mappings":"AAAA,MAAM;AAAEA,EAAAA,kBAAkB,GAAG;AAAvB,IAA2FC,OAAO,CAACC,GAAzG,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;;AAEA,OAAO,MAAMC,OAAO,GAAG,cAAsC;AAAA,MAA/B;AAACC,IAAAA,GAAD;AAAMC,IAAAA,MAAN;AAAcC,IAAAA,KAAd;AAAqBC,IAAAA;AAArB,GAA+B;AAC3DC,EAAAA,OAAO,CAACC,GAAR,CAAY;AAACL,IAAAA,GAAD;AAAMC,IAAAA,MAAN;AAAcC,IAAAA,KAAd;AAAqBC,IAAAA;AAArB,GAAZ;;AACA,MAAI;AACF,UAAMG,OAAO,GAAG;AACdL,MAAAA,MAAM,EAAEA,MAAM,GAAGA,MAAH,GAAY,KADZ;AAEdM,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFK;AAKdJ,MAAAA,IAAI,EAAEK,IAAI,CAACC,SAAL,CAAeN,IAAf;AALQ,KAAhB;;AAOA,QAAGD,KAAH,EAAU;AACRI,MAAAA,OAAO,CAACC,OAAR,CAAgB,eAAhB,IAAoC,UAASL,KAAM,EAAnD;AACD;;AACDE,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BT,kBAAkB,GAAGI,GAAlD;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBC,OAAzB;AACA,UAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACf,kBAAkB,GAAGI,GAAtB,EAA2BM,OAA3B,CAA5B;AACA,UAAMM,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAT,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBO,IAAtB;AACA,QAAGA,IAAI,CAACE,KAAR,EAAe,MAAMF,IAAI,CAACE,KAAX;AACf,WAAOF,IAAP;AACD,GAlBD,CAkBE,OAAOE,KAAP,EAAc;AACdV,IAAAA,OAAO,CAACU,KAAR,CAAc,SAAd,EAAyBA,KAAzB;AACD;AACF,CAvBM;AA0BP,eAAef,OAAf","sourcesContent":["const { REACT_APP_BASE_URL = \"https://strangers-things.herokuapp.com/api/2111-CSU-RM-WEB-PT\" } = process.env;\n\n// const callApi = async ({url, method, token, body}) => {\n//      console.log({url, method, token, body})\n//     try {\n//         const options = {\n//             method: method? method: 'GET',\n//             headers: {\n//                 'Content-Type': 'application/json',\n//             },\n//             body: JSON.stringify(body),\n//         }\n\n//         if (token) {\n//             options.headers['Authorization'] = `Bearer ${token}`;\n//         }\n\n//     console.log('options: ', options);\n//         const resp = await fetch(REACT_APP_BASE_URL + url, options);\n//         const result = await resp.json();\n//         if (result.error){\n//             throw(result.error)\n//         }\n//         return result;    \n//         }catch(error) {\n//         console.log(error);\n//     }\n    \n// };\n\n// const { REACT_APP_API_URL = 'http://localhost:4000/api/2105-SJS-RM-WEB-PT' } = process.env;\n\nexport const callApi = async ({url, method, token, body}) => {\n  console.log({url, method, token, body})\n  try {\n    const options = {\n      method: method ? method : 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(body),\n    };\n    if(token) {\n      options.headers['Authorization'] = `Bearer ${token}`;\n    }\n    console.log('request url: ', REACT_APP_BASE_URL + url)\n    console.log('options: ', options);\n    const response = await fetch(REACT_APP_BASE_URL + url, options);\n    const data = await response.json();\n    console.log('data: ', data);\n    if(data.error) throw data.error;\n    return data;\n  } catch (error) {\n    console.error('ERROR: ', error);\n  }\n}\n\n\nexport default callApi;"]},"metadata":{},"sourceType":"module"}