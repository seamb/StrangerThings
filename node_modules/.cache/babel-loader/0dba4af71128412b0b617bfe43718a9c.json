{"ast":null,"code":"var _jsxFileName = \"/Users/seanbalog/Desktop/FULLSTACK/course_work/StrangerThings/src/components/Posts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiURL = \"https://strangers-things.herokuapp.com/api/2111-CSU-RM-WEB-PT\";\n\nconst Posts = _ref => {\n  _s();\n\n  let {\n    posts,\n    setPosts\n  } = _ref;\n  useEffect(() => {\n    try {\n      const getPosts = async () => {\n        const strangePosts = await fetch(`${apiURL}/posts`);\n        console.log(strangePosts, \"STRANGER\");\n        const results = await strangePosts.json();\n        console.log(results, \"RESULTS\");\n        const posts = results.data.posts;\n        console.log(posts, \"POSTS\");\n        console.log(results.data.posts);\n        if (posts) setPosts(posts);\n      };\n\n      getPosts();\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n  return posts.map((post, index) => {\n    // return (\n\n    /*#__PURE__*/\n    _jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 43\n      }, this), post.description, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 32\n      }, this), post.price, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), \"location: \", /*#__PURE__*/_jsxDEV(\"em\", {\n        children: post.location\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 22\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }, this);\n  });\n};\n\n_s(Posts, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Posts;\nexport default Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["/Users/seanbalog/Desktop/FULLSTACK/course_work/StrangerThings/src/components/Posts.js"],"names":["React","useEffect","apiURL","Posts","posts","setPosts","getPosts","strangePosts","fetch","console","log","results","json","data","error","map","post","index","title","description","price","location"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AACA,MAAMC,MAAM,GAAE,+DAAd;;AAEA,MAAMC,KAAK,GAAG,QAAuB;AAAA;;AAAA,MAAtB;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR,GAAsB;AAEnCJ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAG;AACD,YAAMK,QAAQ,GAAG,YAAY;AAC3B,cAAMC,YAAY,GAAG,MAAMC,KAAK,CAAG,GAAEN,MAAO,QAAZ,CAAhC;AACAO,QAAAA,OAAO,CAACC,GAAR,CAAYH,YAAZ,EAA0B,UAA1B;AACA,cAAMI,OAAO,GAAG,MAAMJ,YAAY,CAACK,IAAb,EAAtB;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAYC,OAAZ,EAAqB,SAArB;AACA,cAAMP,KAAK,GAAGO,OAAO,CAACE,IAAR,CAAaT,KAA3B;AACAK,QAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ,EAAmB,OAAnB;AACAK,QAAAA,OAAO,CAACC,GAAR,CAAYC,OAAO,CAACE,IAAR,CAAaT,KAAzB;AACA,YAAIA,KAAJ,EAAWC,QAAQ,CAACD,KAAD,CAAR;AAEZ,OAVD;;AAWFE,MAAAA,QAAQ;AACP,KAbD,CAaC,OAAOQ,KAAP,EAAa;AACdL,MAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACC;AAEF,GAlBQ,EAkBN,EAlBM,CAAT;AAoBE,SAGGV,KAAK,CAACW,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC1B;;AACE;AAAA;AAAA,8BACE;AAAA,kBAASD,IAAI,CAACE;AAAd;AAAA;AAAA;AAAA;AAAA,cADF,oBACgC;AAAA;AAAA;AAAA;AAAA,cADhC,EAEGF,IAAI,CAACG,WAFR,oBAEqB;AAAA;AAAA;AAAA;AAAA,cAFrB,EAGGH,IAAI,CAACI,KAHR,eAIE;AAAA;AAAA;AAAA;AAAA,cAJF,6BAKW;AAAA,kBAAKJ,IAAI,CAACK;AAAV;AAAA;AAAA;AAAA;AAAA,cALX;AAAA,OAAQJ,KAAR;AAAA;AAAA;AAAA;AAAA;AASH,GAXA,CAHH;AAeH,CArCD;;GAAMd,K;;KAAAA,K;AAwCN,eAAeA,KAAf","sourcesContent":["import React, { useEffect } from 'react';\nconst apiURL =\"https://strangers-things.herokuapp.com/api/2111-CSU-RM-WEB-PT\";\n\nconst Posts = ({posts, setPosts}) => {\n\n  useEffect(() => {\n    try{\n      const getPosts = async () => {\n        const strangePosts = await fetch (`${apiURL}/posts`);\n        console.log(strangePosts, \"STRANGER\")\n        const results = await strangePosts.json();\n        console.log(results, \"RESULTS\")\n        const posts = results.data.posts;\n        console.log(posts, \"POSTS\")\n        console.log(results.data.posts)\n        if (posts) setPosts(posts)\n\n      }\n    getPosts();\n    }catch (error){\n    console.log(error);\n    }\n\n  }, []);\n\n    return( \n    \n   \n       posts.map((post, index) => {\n        // return (\n          <p key={index}>\n            <strong>{post.title}</strong> <br/>\n            {post.description} <br/>\n            {post.price}\n            <br/>\n           location: <em>{post.location}</em>\n          </p>\n    \n          \n      }));\n}\n\n  \nexport default Posts;"]},"metadata":{},"sourceType":"module"}