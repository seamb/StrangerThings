{"ast":null,"code":"const {\n  REACT_APP_BASE_URL = \"https://strangers-things.herokuapp.com/api/2111-CSU-RM-WEB-PT\"\n} = process.env;\n\nconst callApi = async _ref => {\n  let {\n    url,\n    method,\n    headers,\n    token,\n    body\n  } = _ref;\n\n  try {\n    const options = {\n      method: method ? method : 'GET',\n      body: JSON.stringify(body)\n    };\n\n    if (token) {\n      options.headers['Authorization'] = `Bearer ${token}`;\n    }\n\n    const resp = await fetch(`${REACT_APP_BASE_URL}${url}`);\n    const result = await resp.json();\n\n    if (result.error) {\n      throw result.error;\n    }\n\n    return result;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport default callApi;","map":{"version":3,"sources":["/Users/seanbalog/Desktop/FULLSTACK/course_work/StrangerThings/src/util/index.js"],"names":["REACT_APP_BASE_URL","process","env","callApi","url","method","headers","token","body","options","JSON","stringify","resp","fetch","result","json","error","console","log"],"mappings":"AAAA,MAAM;AAAEA,EAAAA,kBAAkB,GAAG;AAAvB,IAA2FC,OAAO,CAACC,GAAzG;;AAEA,MAAMC,OAAO,GAAG,cAA+C;AAAA,MAAxC;AAACC,IAAAA,GAAD;AAAMC,IAAAA,MAAN;AAAcC,IAAAA,OAAd;AAAuBC,IAAAA,KAAvB;AAA8BC,IAAAA;AAA9B,GAAwC;;AAC3D,MAAI;AACA,UAAMC,OAAO,GAAG;AACZJ,MAAAA,MAAM,EAAEA,MAAM,GAAEA,MAAF,GAAU,KADZ;AAGZG,MAAAA,IAAI,EAAEE,IAAI,CAACC,SAAL,CAAeH,IAAf;AAHM,KAAhB;;AAMA,QAAID,KAAJ,EAAW;AACPE,MAAAA,OAAO,CAACH,OAAR,CAAgB,eAAhB,IAAoC,UAASC,KAAM,EAAnD;AACH;;AACD,UAAMK,IAAI,GAAG,MAAMC,KAAK,CAAE,GAAEb,kBAAmB,GAAEI,GAAI,EAA7B,CAAxB;AACA,UAAMU,MAAM,GAAG,MAAMF,IAAI,CAACG,IAAL,EAArB;;AACA,QAAID,MAAM,CAACE,KAAX,EAAiB;AACb,YAAMF,MAAM,CAACE,KAAb;AACH;;AACD,WAAOF,MAAP;AACC,GAhBL,CAgBK,OAAME,KAAN,EAAa;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AAEJ,CArBD;;AAuBA,eAAeb,OAAf","sourcesContent":["const { REACT_APP_BASE_URL = \"https://strangers-things.herokuapp.com/api/2111-CSU-RM-WEB-PT\" } = process.env;\n\nconst callApi = async ({url, method, headers, token, body}) => {\n    try {\n        const options = {\n            method: method? method: 'GET',\n          \n            body: JSON.stringify(body),\n        }\n\n        if (token) {\n            options.headers['Authorization'] = `Bearer ${token}`;\n        }\n        const resp = await fetch(`${REACT_APP_BASE_URL}${url}`);\n        const result = await resp.json();\n        if (result.error){\n            throw(result.error)\n        }\n        return result;    \n        }catch(error) {\n        console.log(error);\n    }\n    \n};\n\nexport default callApi;"]},"metadata":{},"sourceType":"module"}